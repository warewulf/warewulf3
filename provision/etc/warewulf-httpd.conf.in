<IfModule !perl_module>
    LoadModule perl_module modules/mod_perl.so
</IfModule>
<IfModule !version_module>
    LoadModule version_module modules/mod_version.so
</IfModule>
PerlSwitches -w
PerlSwitches -T
PerlSwitches -I/var/www/stage/cgi-bin

# This is disabled as RHEL6 perl_mod seems to be missing this support
#PerlPreConnectionHandler Apache2::Reload

Alias /WW/static @fulldatadir@/warewulf/www
Alias /WW/vnfs_cache /var/tmp/warewulf_cache
Alias /WW/boot /var/lib/tftpboot

ScriptAlias /WW/file @fulllibexecdir@/warewulf/cgi-bin/file.pl
ScriptAlias /WW/script @fulllibexecdir@/warewulf/cgi-bin/script.pl
ScriptAlias /WW/nodeconfig @fulllibexecdir@/warewulf/cgi-bin/nodeconfig.pl
ScriptAlias /WW/vnfs @fulllibexecdir@/warewulf/cgi-bin/vnfs.pl

<Directory @fulllibexecdir@/warewulf/cgi-bin>
    SetHandler perl-script
    PerlResponseHandler ModPerl::Registry
    PerlOptions +ParseHeaders
    Options +ExecCGI
    <IfVersion >= 2.4>
        Require all granted
    </IfVersion>
</Directory>

<Directory @fulldatadir@/warewulf/www>
    Options Indexes MultiViews
    AllowOverride None
    <IfVersion < 2.4>
        Order allow,deny
        Allow from all
    </IfVersion>
    <IfVersion >= 2.4>
        Require all granted
    </IfVersion>
</Directory>

<Directory /var/tmp/warewulf_cache>
    AllowOverride None
    <IfVersion < 2.4>
        Order allow,deny
        Allow from all
    </IfVersion>
    <IfVersion >= 2.4>
        Require all granted
    </IfVersion>
</Directory>

# If selinux is enforcing run the following to allow httpd access:
# semanage fcontext -a -t public_content_t '/var/lib/tftpboot(/.*)?'
# restorecon -Rv /var/lib/tftpboot
<Directory /var/lib/tftpboot>
    AllowOverride None
    <IfVersion < 2.4>
        Order allow,deny
        Allow from all
    </IfVersion>
    <IfVersion >= 2.4>
        Require all granted
    </IfVersion>
</Directory>
