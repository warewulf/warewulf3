#!/bin/sh
##
## Copyright (c) 2001-2003 Gregory M. Kurtzer
##
## Copyright (c) 2003-2012, The Regents of the University of California,
## through Lawrence Berkeley National Laboratory (subject to receipt of any
## required approvals from the U.S. Dept. of Energy).  All rights reserved.
##

#INIT: ALL
#INIT: MASTER
#INIT: PROVISION
#INIT: TIME

if [ -f "$WWFUNCTIONS" ]; then
    . $WWFUNCTIONS
else
    echo "ERROR: could not load warewulf functions!"
    exit 255
fi

wwreqroot

# Check for NTP daemon; if found, skip chrony config
# Else, check for chrony
if rpm --quiet -q ntp || rpm --quiet -q openntpd; then
   wwprint "Using NTP; skipping chrony configuration\n"
   exit 0
else
    if ! rpm --quiet -q chrony; then
        wwprint "No time server daemon found!\n" error
        exit 1
    fi
fi

# Backup existing configuration; if backup fails, don't overwrite original
# Get keyfile entry if the config file exists
if [ ! -f "/etc/chrony.conf" ]; then
    wwprint "No existing /etc/chrony.conf; creating new file\n" 
else
    KEY_FILE=$(sed -n "s/^\s*keyfile\s*//p" /etc/chrony.conf) 2>/dev/null
    if cp --backup /etc/chrony.conf /etc/chrony.conf.save; then
       wwprint "Backed up current chrony config to /etc/chrony.conf.save\n"
    else
       wwprint "ERROR: Cannot backup current /etc/chrony.conf\n" error
       exit 1
    fi
fi

# Get network information using Warewulf Perl modules
NETWORK=`perl -MWarewulf::Network -MWarewulf::Config -e 'print Warewulf::Network->new()->network(Warewulf::Config->new("provision.conf")->get("network device"));'`
NETMASK=`perl -MWarewulf::Network -MWarewulf::Config -e 'print Warewulf::Network->new()->netmask(Warewulf::Config->new("provision.conf")->get("network device"));'`

# Create empty keyfile if it doesn't exist
# There is no validation to determine if it's a valid keyfile
if [ ! -f "$KEY_FILE" ]; then
   KEY_FILE="/etc/chrony.keys"
   touch $KEY_FILE
fi

# Create new copy of /etc/ntp.conf
# ============================================================ 
cat <<EOF > /etc/ntp.conf
# This file was created by Warewulf/wwinit

# Use public servers from the pool.ntp.org project.
# Please consider joining the pool (http://www.pool.ntp.org/join.html).
pool 2.centos.pool.ntp.org iburst

# Record the rate at which the system clock gains/losses time.
driftfile /var/lib/chrony/drift

# Allow the system clock to be stepped in the first three updates
# if its offset is larger than 1 second.
makestep 1.0 3

# Enable kernel synchronization of the real-time clock (RTC).
rtcsync

# Enable hardware timestamping on all interfaces that support it.
#hwtimestamp *

# Increase the minimum number of selectable sources required to adjust
# the system clock.
#minsources 2

# Allow NTP client access from local network.
allow $NETWORK/$NETMASK

# Serve time even if not synchronized to a time source.
#local stratum 10

# Specify file containing keys for NTP authentication.
keyfile $KEYFILE

# Get TAI-UTC offset and leap seconds from the system tz database.
leapsectz right/UTC

# Specify directory for log files.
logdir /var/log/chrony

# Select which information is logged.
#log measurements statistics tracking

EOF
# ============================================================ 

wwprint "Configured chrony service\n"

wwservice_activate chronyd
RETVAL=$?

exit $RETVAL
